version: '3.8'

services:
  dating-app-service:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file: .env
    container_name: "dating-app-service"
    command: [ "./dating-app-service" ]
    working_dir: /app
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  db:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: "${DB_PASS}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 5s
      timeout: 3s
      retries: 5

  migrate:
    image: migrate/migrate
    depends_on:
      - db
    entrypoint: [ "/bin/sh", "-c", "until nc -z db 5432; do echo 'Waiting for database...'; sleep 2; done; migrate -path=/migrations -database 'postgres://${DB_USER}:${DB_PASS}@db:5432/${DB_NAME}?sslmode=disable' up" ]
    volumes:
      - ./config/db/migration:/migrations

volumes:
  postgres-data:
  migrations-data  migrations-data:
